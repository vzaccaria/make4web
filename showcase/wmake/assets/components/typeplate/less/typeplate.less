@charset "UTF-8";

/*!
+---------------------------------------------------------------------+
|        _                               _         _                  |
|       | |_  _   _  _ __    ___  _ __  | |  __ _ | |_  ___           |
|       | __|| | | || '_ \  / _ \| '_ \ | | / _` || __|/ _ \          |
|       | |_ | |_| || |_) ||  __/| |_) || || (_| || |_|  __/          |
|        \__| \__, || .__/  \___|| .__/ |_| \__,_| \__|\___|          |
|             |___/ |_|          |_|                                  |
|                                                                     |
|                                                                     |
| URL: http://typeplate.com                                           |
| VERSION: 1.0.1                                                      |
| Github: https://github.com/typePlate/typeplate.github.com           |
| AUTHORS: Zachary Kain (@zakkain) & Dennis Gaebel (@gryghostvisuals) |
| LICENSE: Creative Commmons                                          |
| http://creativecommons.org/licenses/by/3.0                          |
|                                                                     |
+---------------------------------------------------------------------+
*/


// ==========================================================================//
//
// $Variables
//
// ==========================================================================//


// $BaseType
// -------------------------------------//

@weight: normal;
@line-height: 1.65;
@font-size: 112.5; // percentage value (16 * 112.5% = 18px)
@font-base: 16 * (@font-size/100); // converts our percentage to a pixel value
@measure: @font-base * @line-height;
@font-family: serif;
@font-family-sans: sans-serif;

//the serif boolean var can be redeclared from another stylesheet. However
//the var must be placed after your @import "typeplate.less";
@serif-boolean: true;


// $Color
// -------------------------------------//

@body-copy-color: #444;
@heading-color: #222;


// $Ampersand @font-face
// -------------------------------------//

@amp-fontface-name: Ampersand;
@amp-fontface-source: local("Georgia"), local("Garamond"), local("Palatino"), local("Book Antiqua");
@amp-fontface-fallback: local("Georgia");


// $Ampersand font-family
// -------------------------------------//

// Allows for our ampersand element to have differing
// font-family from the ampersand unicode font-family.
@amp-font-family: Verdana, sans-serif;


// $TypeScale
// -------------------------------------//

@tera: 117; // 117 = 18 × 6.5
@giga: 90; // 90 = 18 × 5
@mega: 72; // 72 = 18 × 4
@alpha: 60; // 60 = 18 × 3.3333
@beta: 48; // 48 = 18 × 2.6667
@gamma: 36; // 36 = 18 × 2
@delta: 24; // 24 = 18 × 1.3333
@epsilon: 21; // 21 = 18 × 1.1667
@zeta: 18; // 18 = 18 × 1


// $TypeScale Unit
// -------------------------------------//

@type-scale-unit-value: rem;


// $Text Indentation Value
// -------------------------------------//

@indent-val: 1.5em;


// $StatsTab
// -------------------------------------//

@stats-font-size: 1.5rem;
@stats-list-margin: 0 0.625rem 0 0;
@stats-list-padding: 0 0.625rem 0 0;
@stats-item-font-size: 0.875rem;
@stats-item-margin: 0.125rem 0 0 0;
@stats-border-style: 0.125rem solid #ccc;



// ==========================================================================//
//
// $Fontfaces
//
// ==========================================================================//


// $UnicodeRange Ampersand
// -------------------------------------//

@font-face {
	font-family: "@{amp-fontface-name}";
	src: @amp-fontface-source;
	unicode-range: ~"U+270C";
}

// Ampersand fallback font for unicode range
@font-face {
	font-family: "@{amp-fontface-name}";
	src: @amp-fontface-fallback;
	unicode-range: ~"U+270C";
}



// ==========================================================================//
//
// $Mixins
//
// ==========================================================================//


// $Modular Scale
// -------------------------------------//

// @Typographic scale
.modular-scale (@scale, @base, @value, @measure:"") when (@measure = "") {
	font-size: ~"@{scale}px";
	@font: (@scale/@base) + @value;
	font-size: ~"@{font}rem";
}
.modular-scale (@scale, @base, @value, @measure:"") when not (@measure = "") {
	font-size: ~"@{scale}px";
	@font: (@scale/@base) + @value;
	font-size: ~"@{font}rem";
	@margin: (@measure/@scale) + @value;
	margin-bottom: ~"@{margin}rem";
}


// $Body Copy
// -------------------------------------//

.base-type (@weight, @line-height, @font-size, @font-family, @serif-boolean: true) when (@serif-boolean = true) {
	font: @weight ~"@{font-size}%/@{line-height}" @font-family;
}

.base-type (@weight, @line-height, @font-size, @font-family, @serif-boolean: true) when not (@serif-boolean = true) {
	font: @weight ~"@{font-size}%/@{line-height}" @font-family-sans;
}


// $Hypens
// -------------------------------------//
//http://trentwalton.com/2011/09/07/css-hyphenation

.css-hyphens (@val) {
	// Accepted values: [ none | manual | auto ]
	-webkit-hyphens: @val; // Safari 5.1 thru 6, iOS 4.2 thru 6
	-moz-hyphens: @val; // Firefox 16 thru 20
	-ms-hyphens: @val; // IE10
	-o-hyphens: @val; // PRESTO...haha LOL
	hyphens: @val; // W3C standard
}


// $Smallcaps
// -------------------------------------//
// http://blog.hypsometry.com/articles/true-small-capitals-with-font-face
// ISSUE #1 : https://github.com/typeplate/typeplate.github.com/issues/1

.smallcaps (@color, @font-weight) {
	// depends on the font family.
	// some font-families don't support small caps
	// or don't provide them with their web font.
	font-variant: small-caps;
	font-weight: @font-weight;
	text-transform: lowercase;
	color: @color;
}


// $Fontsize Adjust
// -------------------------------------//
// correct x-height for fallback fonts: requires secret formula
// yet to be discovered. This is still wacky for support. Use
// wisely grasshopper.

.font-size-adjust (@adjust-value) {
	// firefox 17+ only (as of Feb. 2013)
	font-size-adjust: @adjust-value;
}


// $Ampersand
// -------------------------------------//

.ampersand (@amp-font-family) {
	font-family: @amp-font-family;
}

.ampersand-placeholder {
	.ampersand(@amp-font-family);
}

// Call your ampersand on any element you wish from another stylesheet
// using this Sass extend we've provided...
// @extend %ampersand-placeholder;



// $Wordwrap
// -------------------------------------//
// Silent Sass Classes - A.K.A Placeholders
//
// normal: Indicates that lines may only break at normal word break points.
// break-word : Indicates that normally unbreakable words may be broken at
// arbitrary points if there are no otherwise acceptable break points in the line.

.breakword {
	word-wrap: break-word;
}

.normal-wrap {
	word-wrap: normal;
}

.inherit-wrap {
	word-wrap: auto;
}


// $Dropcaps
// -------------------------------------//
/**
 * Dropcap Sass @include
 * Use the following Sass @include with any selector you feel necessary.
 *
	@include dropcap(@float: left, @font-size: 4em, @font-family: inherit, @text-indent: 0, @margin: inherit, @padding: inherit, @color: inherit, @lineHeight: 1, @bg: transparent);
 *
 * Extend this object into your custom stylesheet.
 *
 */

// Include your '@include dropcap()' mixin and pass the following
// arguments below. Feel free to pass in arguments we've provided.
// At this time you cannot pass in font-family arguments but you're gonna
// change that anyway so why not just make that separately in your declaration.
.dropcap (@float: left, @font-size: 4em, @font-family: inherit, @text-indent: 0, @margin: inherit, @padding: inherit, @color: inherit, @lineHeight: 1, @bg: transparent) {
	&:first-letter {
		float: @float;
		margin: @margin;
		padding: @padding;
		font-size: @font-size;
		font-family: @font-family;
		line-height: @lineHeight;
		text-indent: @text-indent;
		background: @bg;
		color: @color;
	}
}

.drop-cap {
	.dropcap;
}


// $Definition Lists
// -------------------------------------//
// lining
// http://lea.verou.me/2012/02/flexible-multiline-definition-lists-with-2-lines-of-css
//
// dictionary-style
// http://lea.verou.me/2012/02/flexible-multiline-definition-lists-with-2-lines-of-css

.definition-list-style (@style) when (@style = lining) {
	dt,
	dd {
		display: inline;
		margin: 0;
	}
	dt,
	dd {
		& + dt {
			&:before {
				content: "\A";
				white-space: pre;
			}
		}
	}
	dd {
		& + dd {
			&:before {
				content: ", ";
			}
		}
		&:before {
				content: ": ";
				margin-left: -0.2rem; //removes extra space between the dt and the colon
		}
	}
}
// dictionary-style
.definition-list-style (@style) when (@style = dictionary-style) {
	dt {
		display: inline;
		counter-reset: definitions;
		& + dt {
			&:before {
				content: ", ";
				margin-left: -0.2rem; // removes extra space between the dt and the comma
			}
		}
	}
	dd {
		display: block;
		counter-increment: definitions;
		&:before {
			content: ~"counter(definitions, decimal)" ". ";
		}
	}
}



// ==========================================================================//
//
// $Typeplate Styles
//
// ==========================================================================//


// $Globals
// -------------------------------------//

html {
	.base-type(@weight, @line-height, @font-size, @font-family, @serif-boolean);
}

body {
	// Ala Trent Walton
	.css-hyphens (auto);

	// normal: Indicates that lines may only break at normal word break points.
	// break-word : Indicates that normally unbreakable words may be broken at ...
	// arbitrary points if there are no otherwise acceptable break points in the line.
	.breakword;
	color: @body-copy-color;
}


// $Headings
// -------------------------------------//

// styles for all headings, in the style of @csswizardry
.hN () {
	// voodoo to enable ligatures and kerning
	text-rendering: optimizeLegibility;
	// this fixes huge spaces when a heading wraps onto two lines
	line-height: 1;
	margin-top: 0;
}

// for each size in the scale, create a class
.tera {
	.modular-scale(@tera, @font-base, @type-scale-unit-value, @measure);
}

.giga 	{
	.modular-scale(@giga, @font-base, @type-scale-unit-value, @measure);
}

.mega 	{
	.modular-scale(@mega, @font-base, @type-scale-unit-value, @measure);
}

.alpha 	{
	.modular-scale(@alpha, @font-base, @type-scale-unit-value, @measure);
}

.beta 	{
	.modular-scale(@beta, @font-base, @type-scale-unit-value, @measure);
}

.gamma {
	.modular-scale(@gamma, @font-base, @type-scale-unit-value, @measure);
}

.delta 	{
	.modular-scale(@delta, @font-base, @type-scale-unit-value, @measure);
}

.epsilon {
	.modular-scale(@epsilon, @font-base, @type-scale-unit-value, @measure);
}

.zeta 	{
	.modular-scale(@zeta, @font-base, @type-scale-unit-value, @measure);
}

// associate h1-h6 tags with their appropriate greek heading
h1 {
	.alpha;
	.hN;
}

h2 {
	.beta;
	.hN;
}

h3 {
	.gamma;
	.hN;
}

h4 {
	.delta;
	.hN;
}

h5 {
	.epsilon;
	.hN;
}

h6 {
	.zeta;
	.hN;
}


// $Parargraphs
// -------------------------------------//

p {
	margin: 0 0 @indent-val;
	& + p {
		//siblings indentation
		text-indent: @indent-val;
		margin-top: -@indent-val;
	}
}


// $Hyphenation
// -------------------------------------//
// http://meyerweb.com/eric/thoughts/2012/12/17/where-to-avoid-css-hyphenation

abbr,
acronym,
blockquote,
code,
dir,
kbd,
listing,
plaintext,
q,
samp,
tt,
var,
xmp {
	.css-hyphens (none);
}


// $Codeblocks
// -------------------------------------//

// White Space Mixins
.white-space-pre-wrap () {
	white-space: -moz-pre-wrap; // Firefox 1.0-2.0
	white-space: pre-wrap;			// Current Browsers
}
.white-space-pre () {
	white-space: pre;
}

pre code {
	.normal-wrap;
	.white-space-pre-wrap;
}
pre {
	.white-space-pre;
}
code {
	.white-space-pre;
	font-family: monospace;
}


// $Smallcaps
// -------------------------------------//
/**
 * Abbreviations Markup
 *
	<abbr title="hyper text markup language">HMTL</abbr>
 *
 * Extend this object into your markup.
 *
 */
abbr {
	.smallcaps(gray, 600);
	&:hover {
		cursor: help;
	}
}


// $Headings Color
// -------------------------------------//

h1,
h2,
h3,
h4,
h5,
h6 {
	color: @heading-color;
}


// $Definition Lists
// -------------------------------------//
/**
 * Lining Definition Style Markup
 *
	<dl class="lining">
		<dt><b></b></dt>
		<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.lining {
	.definition-list-style(lining);
}

/**
 * Dictionary Definition Style Markup
 *
	<dl class="dictionary-style">
		<dt><b></b></dt>
			<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.dictionary-style {
	.definition-list-style(dictionary-style);
}


// $Stats Tabs
// -------------------------------------//
/**
 * Stats Tab Markup
 *
	<ul class="stats-tabs">
		<li><a href="#">[value]<b>[name]</b></a></li>
	</ul>
 *
 * Extend this object into your markup.
 *
 */
.stats-tabs {
	padding: 0;
	li {
		display: inline-block;
		margin: @stats-list-margin;
		padding: @stats-list-padding;
		border-right: @stats-border-style;
		&:last-child {
			margin: 0;
			padding: 0;
			border: none;
		}
		a {
			display: inline-block;
			font-size: @stats-font-size;
			font-weight: bold;
			b {
				display: block;
				margin: @stats-item-margin;
				font-size: @stats-item-font-size;
				font-weight: normal;
			}
		}
	}
}


// $Blockquote Cites
// -------------------------------------//
/**
 * Blockquote Markup
 *
	<blockquote cite="">
		<p>&Prime;&Prime;</p>
		<cite>
			<small><a href=""></a></small>
		</cite>
	</blockquote>
 *
 * Extend this object into your markup.
 *
 */

.cite-style(@display:block, @text-align:right, @font-size: .875em) {
	display: @display;
	font-size: @font-size;
	text-align: @text-align;
}

.cite {
	.cite-style;
}


// $Pull Quotes
// -------------------------------------//
// http://24ways.org/2005/swooshy-curly-quotes-without-images
//
// http://todomvc.com - Thanks sindresorhus!
// https://github.com/typeplate/typeplate.github.com/issues/49

/**
 * Pull Quotes Markup
 *
	<aside class="pull-quote">
		<blockquote>
			<p></p>
		</blockquote>
	</aside>
 *
 * Extend this object into your custom stylesheet.
 *
 */

.pull-quotes(@font-size, @opacity) {
	position: relative;
	padding: (@font-size/@font-size);
	&:before,
	&:after {
		height: (@font-size/@font-size);
		opacity: @opacity;
		position: absolute;
		font-size: @font-size;
	}
	&:before {
		content: '“';
		top:  0;
		left: 0;
	}
	&:after {
		content: '”';
		bottom: 0;
		right: 0;
	}
}

.pull-quote {
	.pull-quotes(4em, .15);
}


// $Figures
// -------------------------------------//
/**
 * Figures Markup
 *
	<figure>
		<figcaption>
			<strong>Fig. 4.2 | </strong>Type Anatomy, an excerpt from Mark Boulton's book<cite title="http://designingfortheweb.co.uk/book/part3/part3_chapter11.php">"Designing for the Web"</cite>
		</figcaption>
	</figure>
 *
 * Extend this object into your markup.
 *
 */


 // $Footnotes
// -------------------------------------//
/**
 * Footnote Markup : Replace 'X' with your unique number for each footnote
 *
	<article>
		<p><sup><a href="#fn-itemX" id="fn-returnX"></a></sup></p>
		<footer>
			<ol class="foot-notes">
				<li id="fn-itemX"><a href="#fn-returnX">↩</a></li>
			</ol>
		</footer>
	</article>
 *
 * Extend this object into your markup.
 *
 */
